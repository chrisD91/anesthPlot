#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on

@author: cdesbois
"""


import os

import anesplot.record_main as rec
from anesplot.loadrec.export_reload import export_data_to_hdf

paths = rec.paths
paths["save"] = "~"     # <--- the directory to save-in (FILL ME)

############################################# load
m_name = None           # <--- the monitor filename (FILL ME)
mtrends = rec.MonitorTrend(m_name)
mwaves = rec.MonitorWave(rec.trendname_to_wavename(mtrends.filename))

ttrends = rec.TaphTrend(monitorname=mtrends.filename)   # comment when t_name is defined
# --> a dialog will appear to choose the right file according to the monitor filename

t_name = ''             # <--- FILL ME (use the value of ttends.filename)
ttrends = rec.TaphTrend(filename = t_name)  # --> will load without the dialog


############################################# look at the data
mtrends.show_graphs()
ttrends.show_graphs()

# ttrends.shift_datetime(60)  # ---> correction? between monitor and taph file (in minutes)
# ---> check the result


############################################# adapt
## correction for etime (minutes and sec) based on the start of the monitor recording
# mstart = mtrends.data.datetime.iloc[0]
# ttrends.sync_etime(mstart)


############################################# export to hdf
name = mtrends.header["Patient Name"].title().replace(" ", "")
name = name[0].lower() + name[1:]

save_name = os.path.join(paths["save"], 'data', name + ".hdf")
save = False
if save:
    export_data_to_hdf(save_name, mtrend=mtrends, mwave=mwaves, ttrend=ttrends)
