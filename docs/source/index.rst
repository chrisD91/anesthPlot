.. anesplot documentation master file, created by
   sphinx-quickstart on Wed Sep  8 17:19:08 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

#####################################
Welcome to anesplot's documentation!
#####################################

anesthPlot is a python package developped to extract, manipulate and plots **anesthesia data 
recorded during equine anesthesia**. 
Is is using recording generated by the Monitor Software or the Taphonius equine anesthesia machine. 

The main purpose is an usage in a **teaching environment** (briefing-debriefing approach), 
but this package can also facilite recording manipulation for other purposes.
 
.. warning::

  This is a work in progres, 

   * the processes are mainly focused on horses anesthesia (default values) 
   * in our environment the data recorded came from either:
  
      * an as3 or as5 anesthesia monitor (ekg, invasive pressure, etCO2, halogenate, spirometry)
      * a Taphonius equine ventilator 
      * (some ekg .csv data extracted using a Televet holter system)


use anesplot as a script : call from a terminal 
================================================

- you can **choose** a recordings, **load** it and **plot** the data from a terminal:
   

   .. code-block:: bash

      python anesthPlot/anesplot/__main__.py
      or
      python -m anesplot

- the command  will open an GUI choose menu to choose the recording 
      (MonitorTrend, TaphoniusTrend, MonitorWave, TelevetWave)

- this script approach will build a **standard plot series** for debriefing purposes:
         
   - global histograms (cardiovascular and anesthesia summary)
   - cardiovascular time based trends plots
   - respiratory time based trends plots
   - anesthesia time based trends plots

- or will build a **plot for wave** recording 
  (the user will be asked to choose the wave to be displayed) 
  
   - one or two waves on the same plot (script usage, pop_up menu to choose)

.. note::
   after the plots have been displayed, you can use the graphical interface to scale and save the plots


use anesplot as a package : import anesplot in a python environment
====================================================================

- you can use this code as a **python package** ('import mode'):
      
   here is an example python code

   .. code-block::  python
 
      import anesplot.record_main as rec
      trendname = 'a_full_path_to_csv_file'
      # nb if no filename is provided, a chooseFile Gui will be called to choose the file
      trends = rec.MonitorTrend(trendname)
      #(you can also use trends = rec.taphTrend()
      wavename = rec.trendname_to_wavename(trendname)
      waves = rec.MonitorWave(wavename)
        
      trends.show_graphs() # -> set of plots for 'clinical' debriefing purposes

      waves.plot_waves() # -> one or two traces
      # ... adjust manually the scales of the display
      waves.define_a_roi() # -> to register the plotting scales
      waves.animate_fig() #-> to build an animation using these parameters

   .. hint::   
      after **'import anesplot.record_main as rec'**

      **'rec.get_basic_debrief_commands()**' will prefill the clipboard with 'a standard' code template

   - additional functions are available to extract instaneous heart rate, overlap ekg beats, extract blood pressure systolic variation, ...

      - see for example anesplot/treatrec/ekg_to_hr.py

.. hint:: 
   **'rec.get_guide()'** will fill the clipboard with code templates of standard approaches



the objects
===========

.. toctree::

   anesplot.record_main
   record_objects


sub_modules
===========
.. toctree::
   :maxdepth: 4
   :caption: Contents:

   anesplot.guides
   anesplot.loadrec
   anesplot.plot
   anesplot.treatrec
   anesplot.config


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
